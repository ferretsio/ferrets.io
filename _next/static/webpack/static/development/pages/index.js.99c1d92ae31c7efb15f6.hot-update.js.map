{"version":3,"file":"static/webpack/static/development/pages/index.js.99c1d92ae31c7efb15f6.hot-update.js","sources":["webpack:///./src/Components/Layouts/Portal.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Grid,\n  Header,\n  Segment,\n  TransitionablePortal,\n  Button,\n  Icon\n} from \"semantic-ui-react\";\nimport classes from \"../../../static/css/Portal.css\";\nexport default class TransitionablePortalExampleTransition extends Component {\n  state = { animation: \"fade up\", duration: 1200, open: false, qId: 0 };\n  componentDidMount() {\n    this.setState({ open: true });\n  }\n\n  Quotes = [\n    {\n      header: \"Thomas Hauser\",\n      quote:\n        'Not voting, is disrespecting the \"best\" of what our nation stands for.'\n    },\n    {\n      header: \"Unknown\",\n      quote: \"The right of election is the very essence of the constitution.\"\n    },\n    {\n      header: \"Patty Berg\",\n      quote: \"People are what any election is all about.\"\n    }\n  ];\n\n  handleClick = id => {\n    this.setState({ qId: id });\n  };\n\n  renderPortalContent = () => {\n    return (\n      <Segment className={classes.portal}>\n        <Header>{this.Quotes[this.state.qId].header}</Header>\n        <p>{this.Quotes[this.state.qId].quote}</p>\n      </Segment>\n    );\n  };\n\n  render() {\n    const { animation, duration, open } = this.state;\n\n    return (\n      <Grid columns={3}>\n        <Grid.Row>\n          <Grid.Column>\n            <TransitionablePortal\n              open={open}\n              transition={{ animation, duration }}\n            >\n              {this.renderPortalContent()}\n            </TransitionablePortal>\n          </Grid.Column>\n          <Button.Group size=\"small\">\n            <Button onClick={() => this.handleClick(0)}>One</Button>\n            <Button onClick={() => this.handleClick(1)}>Two</Button>\n            <Button onClick={() => this.handleClick(2)}>Three</Button>\n          </Button.Group>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAQA;AACA;AAAA;;;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AAEA;AACA;AAFA;AAMA;AACA;AAFA;AAKA;AACA;AAFA;AACA;AAKA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;;;;;;AAhCA;AACA;AAAA;AAAA;AACA;;;AA+BA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AAzDA;AACA;;;;;A","sourceRoot":""}