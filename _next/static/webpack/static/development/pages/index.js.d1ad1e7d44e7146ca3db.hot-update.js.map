{"version":3,"file":"static/webpack/static/development/pages/index.js.d1ad1e7d44e7146ca3db.hot-update.js","sources":["webpack:///./src/Components/Pages/When.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport classes from \"../../../static/css/When.css\";\nimport { Transition, Segment } from \"semantic-ui-react\";\n\nconst AnimatedCard = ({ position, animation, digit }) => {\n  return (\n    <div className={classes.flipCard}>\n      <div className={position}>\n        <div className={animation}>\n          <span>{digit}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default class When extends Component {\n  state = {\n    hours: 0,\n    hoursShuffle: true,\n    minutes: 0,\n    minutesShuffle: true,\n    seconds: 0,\n    secondsShuffle: true\n  };\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.updateTime(), 50);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  updateTime() {\n    // get new date\n    const time = new Date();\n    // set time units\n    const hours = time.getHours();\n    const minutes = time.getMinutes();\n    const seconds = time.getSeconds();\n    // on hour chanage, update hours and shuffle state\n    if (hours !== this.state.hours) {\n      const hoursShuffle = !this.state.hoursShuffle;\n      this.setState({\n        hours,\n        hoursShuffle\n      });\n    }\n    // on minute chanage, update minutes and shuffle state\n    if (minutes !== this.state.minutes) {\n      const minutesShuffle = !this.state.minutesShuffle;\n      this.setState({\n        minutes,\n        minutesShuffle\n      });\n    }\n    // on second chanage, update seconds and shuffle state\n    if (seconds !== this.state.seconds) {\n      const secondsShuffle = !this.state.secondsShuffle;\n      this.setState({\n        seconds,\n        secondsShuffle\n      });\n    }\n  }\n\n  render() {\n    // state object destructuring\n    const {\n      hours,\n      minutes,\n      seconds,\n      hoursShuffle,\n      minutesShuffle,\n      secondsShuffle\n    } = this.state;\n\n    return (\n      <div className={classes.when}>\n        <div className={classes.flipClock}>\n          <FlipUnitContainer\n            unit={\"hours\"}\n            digit={hours}\n            shuffle={hoursShuffle}\n          />\n          <FlipUnitContainer\n            unit={\"minutes\"}\n            digit={minutes}\n            shuffle={minutesShuffle}\n          />\n          <FlipUnitContainer\n            unit={\"seconds\"}\n            digit={seconds}\n            shuffle={secondsShuffle}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;;;;;;AAQA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;;;AAEA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;AAnFA;AACA;;;;;A","sourceRoot":""}